{"version":3,"file":"index.mjs","sources":["../lib/nanmean.js","../lib/ndarray.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nanmeanpn = require( '@stdlib/stats-base-nanmeanpn' );\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a strided array, ignoring `NaN` values.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} arithmetic mean\n*\n* @example\n* var x = [ 1.0, -2.0, NaN, 2.0 ];\n* var N = x.length;\n*\n* var v = nanmean( N, x, 1 );\n* // returns ~0.3333\n*/\nfunction nanmean( N, x, stride ) {\n\treturn nanmeanpn( N, x, stride );\n}\n\n\n// EXPORTS //\n\nmodule.exports = nanmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nanmeanpn = require( '@stdlib/stats-base-nanmeanpn' ).ndarray;\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a strided array, ignoring `NaN` values.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} arithmetic mean\n*\n* @example\n* var floor = require( '@stdlib/math-base-special-floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0, NaN ];\n* var N = floor( x.length / 2 );\n*\n* var v = nanmean( N, x, 2, 1 );\n* // returns 1.25\n*/\nfunction nanmean( N, x, stride, offset ) {\n\treturn nanmeanpn( N, x, stride, offset );\n}\n\n\n// EXPORTS //\n\nmodule.exports = nanmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar nanmean = require( './nanmean.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( nanmean, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = nanmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the arithmetic mean of a strided array, ignoring `NaN` values.\n*\n* @module @stdlib/stats-base-nanmean\n*\n* @example\n* var nanmean = require( '@stdlib/stats-base-nanmean' );\n*\n* var x = [ 1.0, -2.0, NaN, 2.0 ];\n* var N = x.length;\n*\n* var v = nanmean( N, x, 1 );\n* // returns ~0.3333\n*\n* @example\n* var floor = require( '@stdlib/math-base-special-floor' );\n* var nanmean = require( '@stdlib/stats-base-nanmean' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0, NaN ];\n* var N = floor( x.length / 2 );\n*\n* var v = nanmean.ndarray( N, x, 2, 1 );\n* // returns 1.25\n*/\n\n// MODULES //\n\nvar nanmean = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = nanmean;\n"],"names":["nanmeanpn","require$$0","nanmean_1","N","x","stride","ndarray","nanmean","require$$1","offset","lib"],"mappings":";;yMAsBA,IAAIA,EAAYC,EA2BhB,IAAAC,EAPA,SAAkBC,EAAGC,EAAGC,GACvB,OAAOL,EAAWG,EAAGC,EAAGC,ICrBrBL,EAAYC,EAA0CK,QA8B1D,IC7BAC,EAAAC,EADAP,EAOAM,EAAA,WDgBA,SAAkBJ,EAAGC,EAAGC,EAAQI,GAC/B,OAAOT,EAAWG,EAAGC,EAAGC,EAAQI,MCZjC,ICkBAC,EDlBAH"}